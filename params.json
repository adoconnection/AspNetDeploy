{"name":"ASP.NET Deploy","tagline":"Ultimate CI + deploy server for ASP.NET applications","body":"# Explore how it works\r\n\r\n## 1. Add source controls\r\nAspNetDeploy will checkout your sources and show all your projects:\r\n![](http://resources.aspnetdeploy.com/sources-list.PNG)\r\nAspNetDeploy is aware of:\r\n* Web projects\r\n* Database projects\r\n* Unit test projects\r\n* Console projects\r\n* Standalone Windows apps\r\n* File archives\r\n\r\n## 2. Define bundles\r\nBundle is a set of related projects that can not live without each other.\r\nFor example Web project + Database project\r\n![](http://resources.aspnetdeploy.com/bundles-list.PNG)\r\n\r\n## 3. Define deployment steps for each bundle\r\nEvery bundle needs deployment steps to be defined. \r\n![](http://resources.aspnetdeploy.com/deployment-step-types.PNG)\r\n\r\nSinse AspNetDeploy is aware of project types you will never be asked to script anything ever again, instead it will suggest to do regular tasks for according to each project type.\r\n![](http://resources.aspnetdeploy.com/deployment-step-web.png)\r\n\r\n![](http://resources.aspnetdeploy.com/deployment-steps.PNG)\r\n\r\n## 4. Define environments\r\nCreate as many environments as your publication process require.\r\nOnce environment is created it require machines to be assigned to in. Satellite agent has to be installed on each machine.\r\nAspNetDeploy uses SSL to connect to satellite agents as well as Key / Password pair to ensure noone else will be able to connect.\r\n![](http://resources.aspnetdeploy.com/environments-list.PNG)\r\nEvery machine has its own roles. Each deployment step is configured to run only on machines with selected roles.\r\n\r\n## 5. Start building and deploying!\r\nEvery time you do changes to your code AspNetDeploy will take latest version and rebuild all projects assigned to bundles.\r\nThen it will package and prepare every bundle that depends of modified projects.\r\nWhen packaging is complete you can instantly deploy to Test environment.\r\n\r\n### Promote to next environment\r\nEvery package has to be approved by appropriate team member to move forward. \r\n* Developers or Testers can approve package if its working on Test environment\r\n* Testers can approve its working on intermediate environments such as QA or Staging. \r\n* Testers decide when they want fresh version to be deployed on QA / Staging, so developers won't interrupt important testing procedures. \r\n* Publishers are responsible for promoting package to deploy on Live environments.\r\n![](http://resources.aspnetdeploy.com/publications-approvement.PNG)\r\n","google":"UA-57727725-1","note":"Don't delete this file! It's used internally to help with page regeneration."}