@using Environment = AspNetDeploy.Model.Environment
@{
    ViewBag.Title = "Index";
    ViewBag.PageClass = "bundlesPage";

    Layout = "~/Views/Shared/_Layout.cshtml";
    IList<Environment> environments = this.ViewBag.Environments;
    BundleVersion bundleVersion = this.ViewBag.BundleVersion;

    List<Publication> allPublications = bundleVersion.Packages.SelectMany( p => p.Publications).OrderByDescending( p => p.CreatedDate).ToList();

    IList<Package> orderedPackages = bundleVersion.Packages.OrderByDescending( p => p.CreatedDate).ToList();
    Package latestPackage = orderedPackages.FirstOrDefault();
}

<div class="container">

    <h1>
        <div class="row">
            <div class="col-md-10">
                @bundleVersion.Bundle.Name @bundleVersion.Name <small>Bundle</small>
            </div>
            <div class="col-md-2 text-right">
                <button class="btn btn-default btn-lg">Configure</button>
            </div>
        </div>
    </h1>

    <hr />
    
    <ul class="nav nav-pills" role="tablist">
        <li role="presentation"><a href="@Url.Action("VersionProjects", new { id = bundleVersion.Id })">Projects</a></li>
        <li role="presentation"><a href="@Url.Action("VersionDeployment", new { id = bundleVersion.Id })">Deployment process</a></li>
        <li role="presentation" class="active"><a href="#">Packages & Publications</a></li>
        <li role="presentation"><a href="@Url.Action("VersionVariables", new { id = bundleVersion.Id })">Local variables</a></li>
    </ul>
    
    <hr />

    <h3>Latest package</h3>

    @if (latestPackage != null)
    {
        <p>@latestPackage.CreatedDate.ToLocalTime().ToString("d MMMM yyyy"), @latestPackage.CreatedDate.ToLocalTime().ToString("H:mm")</p>
    }
    else
    {
        <p>no packages</p>
    }
    
    <br/>
    
    <h3>Packages</h3>
    
    <table class="table table-hover">
        <thead>
            <tr>
                <th>ID</th>
                <th>Build date</th>
                @foreach (Environment environment in environments)
                {
                    <th>@environment.Name</th>
                }
            </tr>
        </thead>


        @{
            int packageIndex = orderedPackages.Count;
        }
        <tbody>
            @foreach (Package package in orderedPackages)
            {
                <tr>
                    <td>@Html.ActionLink(package.Id.ToString(), "Details", "Packages", new { id = package.Id }, null)</td>
                    <td>@package.CreatedDate.ToLocalTime().ToString("d MMMM yyyy"), @package.CreatedDate.ToLocalTime().ToString("H:mm")</td>

                    @foreach (Environment environment in environments)
                    {
                        List<Publication> packagePublications = package.Publications.Where(p => p.EnvironmentId == environment.Id).ToList();
                        Publication latestPackagePublication = packagePublications.OrderByDescending(p => p.CreatedDate).FirstOrDefault();

                        Publication latestSuccessPublication = allPublications.Where( p => p.State == PublicationState.Complete).FirstOrDefault(p => p.Environment == environment);

                        bool isActiveOnEnvironment = false;
                        
                        if (latestSuccessPublication != null)
                        {
                            if (latestSuccessPublication.Package == package)
                            {
                                isActiveOnEnvironment = true;
                            }
                        }

                        bool isQueued = latestPackagePublication != null && latestPackagePublication.State == PublicationState.Queued;
                        bool isInProgress = latestPackagePublication != null && latestPackagePublication.State == PublicationState.InProgress;
                        
                        string rowClass = "";

                        /*if (latestPackagePublication != null )
                        {
                            switch (latestPackagePublication.State)
                            {
                                case PublicationState.Complete:
                                    rowClass = "success";
                                    break;

                                case PublicationState.Error:
                                    rowClass = "error";
                                    break;

                                case PublicationState.Queued:
                                case PublicationState.InProgress:
                                    rowClass = "info";
                                    break;
                            }
                            
                        }*/


                        if (isActiveOnEnvironment)
                        {
                            rowClass = "success";
                        }
                        else if (isQueued)
                        {
                            rowClass = "info";
                        }
                        else if (isInProgress)
                        {
                            rowClass = "primary";
                        }

                        <td class="@rowClass">
                            @if (packagePublications.Count == 0)
                            {
                                @:&mdash;
                            }
                            else
                            {
                                <div class="pull-right">
                                    @if (isActiveOnEnvironment)
                                    {
                                        <span><b>Active</b></span>
                                    }
                                    else if (isQueued)
                                    {
                                        <span><b>Queued</b></span>
                                    }
                                    
                                    @if (package.ApprovedOnEnvironments.Any(a => a.Environment == environment))
                                    {
                                        <span class="label label-success">approved</span>
                                    }
                                    else
                                    {
                                            @*<span class="label label-info">pending</span>*@
                                    }
                                </div>
                                
                                foreach (Publication publication in packagePublications.OrderByDescending(p => p.CreatedDate))
                                {
                                    <div>
                                        <a href="@Url.Action("Details", "Publications", new { id = publication.Id })">@publication.Id – @publication.CreatedDate.ToLocalTime().ToString("d MMMM yyyy"), @publication.CreatedDate.ToLocalTime().ToString("H:mm")</a>
                                        <span> – @publication.State</span>
                                    </div>
                                }
                                
                                
                            }
                        </td>
                    }

                </tr>

                    packageIndex--;
            }
        </tbody>
    </table>
</div>

@helper ProjectGroup(BundleVersion bundleVersion, string name, ProjectType projectType)
{
    <h3>@name</h3>

    if (bundleVersion.ProjectVersions.Any(pv => pv.ProjectType.HasFlag(projectType)))
    {
        foreach (ProjectVersion projectVersion in bundleVersion.ProjectVersions.Where(pv => pv.ProjectType.HasFlag(projectType)))
        {
            <div class="row">
                <div class="col-sm-6">
                    @if (projectVersion.ProjectType.HasFlag(ProjectType.Web))
                    {
                        <img src="~/Resources/Layout/Images/Icons/VsWebProject.PNG"/>
                    }
                    else if (projectVersion.ProjectType.HasFlag(ProjectType.Test))
                    {
                        <img src="~/Resources/Layout/Images/Icons/VsTestProject.PNG"/>
                    }
                    <a href="@Url.Action("Details", "ProjectVersions", new { id = projectVersion.Id })">@projectVersion.Name @projectVersion.SourceControlVersion.Name</a>
                </div>
            </div>
        }
    }
    else
    {
        <div>–</div>
    }
    <br />
}